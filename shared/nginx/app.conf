server_tokens off;

uwsgi_cache_path /tmp/mcache keys_zone=m_cache:1m max_size=20m inactive=1d use_temp_path=off;

server {
    listen 80;
    server_name docker.rashkur.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name docker.rashkur.com;
    
    ssl_certificate /etc/nginx/ssl/live/docker.rashkur.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/docker.rashkur.com/privkey.pem;

    include /etc/nginx/conf.d/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/conf.d/ssl-dhparams.pem;

    resolver 127.0.0.11 ipv6=off;

    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src 'self'";
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always; 

    location /static {
	include uwsgi_params;
        uwsgi_pass app:8000;

	uwsgi_cache_key $uri;
        uwsgi_cache m_cache;
        uwsgi_cache_lock on;
        uwsgi_cache_use_stale updating error timeout http_500 http_503; # serve cached content when the upstream server is down or updating.
        uwsgi_cache_valid 200 1s;
#        add_header X-Cache-Status $upstream_cache_status; #for debug
    }

    location / {
        include uwsgi_params;
        uwsgi_pass app:8000;
    }

    location /stats {
        auth_basic           "You shall not pass";
    	auth_basic_user_file /etc/nginx/conf.d/.htpasswd; 

        include uwsgi_params;
        uwsgi_pass app:8100;
    }
}
